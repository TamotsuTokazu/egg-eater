(let ((t (let ((u 7) (j (let ((g (let ((j (* (* (let ((d (- -10 2)) (b (let ((f 9)) u)) (w (add1 d))) (+ b u)) (* (sub1 u) u)) u))) 1))) (sub1 (- (- (let ((i (sub1 5)) (v (add1 2)) (t (let ((y g) (n v) (o u)) u))) (sub1 u)) (sub1 (sub1 u))) (let ((k (add1 g)) (q (sub1 (- k u)))) -7)))))) (sub1 (let ((w j) (p (let ((w w) (t (- (* (let ((a w) (e u) (u j)) -8) (let ((v 2)) 9)) w))) (let ((s (let ((s (add1 0)) (q (sub1 -2))) (+ w -3)))) (- (- j 5) (* -9 5))))) (m w) (r (let ((k (let ((g (sub1 (- j w))) (n (+ (let ((p g) (i 1) (k -7) (r 5)) p) (* g g)))) (let ((j (* 5 j)) (v p) (w (let ((u u)) -2)) (a -7)) (add1 a)))) (v (sub1 (- (let ((y j)) j) k))) (h (let ((s (let ((r (- -8 -9)) (p (let ((o 1) (y v)) r)) (l (sub1 v)) (y (sub1 9))) (- m p))) (n (* (let ((e m) (z 7)) v) (let ((g -5) (k -9) (y k) (z m)) 7))) (a (* (sub1 -10) (- 1 k))) (r (+ (add1 u) (let ((j p) (m j) (f u) (n 3)) -9)))) (let ((r (let ((x -1) (k v) (c 2) (h -4)) w)) (w (let ((i r) (v -2) (d w) (k v)) -1)) (d (let ((i j)) s))) (let ((l 3) (u -7) (q u)) j)))) (y (let ((o 2) (g (+ (let ((o -3) (c -5) (q j) (u h)) h) (let ((q m) (f -6) (j u)) u)))) (sub1 (let ((x g) (y m) (i m) (n u)) j))))) h))) (* (let ((b (let ((w (let ((s j)) m)) (m m)) (let ((z m) (d p) (l -1) (h 7)) p)))) (let ((u (sub1 3)) (v (- u r)) (r (let ((s j)) w))) (- u u))) (let ((g (let ((y (let ((i u) (g p) (p 3)) r)) (b (- w u)) (q y) (k (* j q))) (let ((f 10) (h 1) (a -6)) -3))) (k (* 2 (- w -7)))) (let ((n k) (i (let ((o g)) k)) (q (add1 n))) (let ((x k) (s u) (p w) (y 0)) p)))))))) (d t) (x (* (+ (let ((f (- t (let ((m (add1 (add1 -2))) (d (+ (sub1 d) (sub1 0))) (k (* (- 7 d) (* d d))) (z (let ((g m)) (let ((s d) (f 2) (j t) (i j)) j)))) (let ((r (+ m 10)) (b (+ k d)) (w 3)) (let ((x -7) (q 7) (g -5) (c x)) 5))))) (z (+ (let ((b (- (let ((z 2) (g z) (c -4) (o z)) -1) (sub1 f))) (r (+ (add1 b) (let ((k t) (d 6) (a d)) a))) (d (let ((d (sub1 d)) (r (let ((r d) (u r)) b)) (g (let ((q 2) (n r) (z f) (b f)) t))) (sub1 f))) (v (add1 (+ d 5)))) (+ (- f f) (let ((o -3)) b))) (sub1 2))) (c (* (sub1 (+ (sub1 t) (let ((j -7)) z))) (add1 (+ (+ z z) (let ((l t) (o 4) (q t) (u 7)) -9))))) (j (+ f 1))) (add1 (* (* (let ((u -10)) 3) d) (let ((i (let ((g j)) 8)) (w (add1 t)) (o j)) (let ((u z)) d))))) (- d (* (sub1 (- (sub1 t) (+ d d))) (+ d (sub1 (+ t t)))))) (sub1 (sub1 (* (- (sub1 (let ((c 1)) 1)) (let ((d (let ((l t) (w l)) d)) (z (add1 1)) (b (sub1 t)) (h (add1 2))) 1)) (add1 (+ (* -10 1) (sub1 d)))))))) (a (let ((r d)) (sub1 (sub1 (let ((j (let ((q t) (h (* (+ d x) (let ((d t) (b 0)) d)))) (let ((b 5) (m (+ d x))) (let ((t d) (m -7) (i b) (k i)) i)))) (p (* (- (* -8 -8) 1) (sub1 (let ((s d) (y 7)) x))))) (- (* (let ((s t) (q -7) (g -7) (u g)) q) (let ((y 0) (e p) (h x)) -6)) (+ (+ r p) (let ((j x) (s d)) -6))))))))) (- (sub1 (add1 (let ((v (let ((d (add1 (let ((a d) (t a) (y 5) (f 1)) 5)))) (+ (- a a) (+ t d))))) (- (- (let ((v 4)) 4) (* -6 t)) (add1 (* a 5)))))) (let ((m (+ (add1 (- (sub1 (let ((l d) (r t) (c d) (q -6)) -6)) (add1 (* 1 a)))) (let ((a x)) (sub1 (sub1 (* t 3))))))) (- (let ((n (let ((t (let ((w (sub1 m)) (v (let ((q -8)) a)) (y (sub1 d)) (g (let ((u y)) u))) (- a m))) (e (let ((q (- t t)) (s (- 7 t)) (z (add1 8)) (g (+ -1 t))) (* -3 -3))) (z (let ((s (+ t m)) (v (* e m)) (e (let ((t x) (x m)) v)) (y (- s -6))) (add1 -9)))) (let ((x (let ((k x)) d))) (sub1 a)))) (o (add1 (sub1 8))) (d (+ (let ((o (+ n -4)) (a (let ((o -5) (z n) (g t) (b x)) 7)) (t (- 1 5)) (j o)) (let ((r n) (p j)) -9)) (let ((s (sub1 m)) (k (let ((u t) (f t) (j 2) (c 9)) d)) (x m) (j (let ((d n)) m))) (add1 k)))) (l (let ((l (let ((q (let ((i 3) (e d) (d i) (v 8)) 6)) (w (let ((u t) (n n) (c 6)) a))) (* w 8)))) (let ((e (* 8 -4)) (r (let ((j a) (p j) (q n) (v p)) o))) (let ((q t) (g x)) d))))) t) (let ((c x) (v (+ (+ (add1 10) (sub1 5)) (sub1 t))) (u (let ((p (let ((p (sub1 t)) (a (let ((n v) (h d) (q v)) 10))) (+ -5 a))) (q (add1 (* 7 x))) (k (let ((w (add1 -8)) (j (+ 9 x)) (g (let ((v t) (x j) (r j)) 0)) (t (* w d))) (add1 -4)))) v)) (e (add1 (- (let ((x t)) c) (+ -7 x))))) (let ((i (sub1 (let ((y -4) (c a)) x))) (a (+ (sub1 6) (add1 i))) (o (let ((k (let ((c x) (f u) (s a)) a)) (q (add1 3)) (l (- q d))) (- i -5))) (k (* (let ((g u) (k a) (y i)) -6) (let ((x e) (s u) (c s) (z 8)) -1)))) (+ (let ((b d) (l c) (t e) (x 0)) x) (sub1 e))))))))
