(* (+ (+ (add1 -8) (- (let ((m (add1 (let ((p (add1 8)) (f (- p 4)) (j (sub1 f))) (- -6 p)))) (z (- (sub1 m) 7)) (c (add1 (let ((v (sub1 2)) (j (let ((w -8)) m)) (l (sub1 z))) (let ((m v) (r z) (j v)) z))))) (sub1 (- (* c -7) (let ((l 3) (m -8) (x m)) m)))) (let ((a (sub1 (sub1 (* 4 -3))))) a))) (* (- (sub1 (let ((r (add1 (add1 -2)))) (let ((r (+ -7 -5)) (w (sub1 8))) w))) (let ((j (let ((p (add1 (let ((l -10) (w l) (k l)) l))) (i (add1 -9)) (h (add1 (+ p i))) (a (add1 (sub1 p)))) (let ((p -10) (i (add1 8))) (- h i)))) (y (sub1 (let ((s j) (b (+ j 9)) (l s)) (- j s))))) (let ((y (* (- 10 j) (let ((q y)) q)))) (let ((v (sub1 7)) (j -5)) (- j j))))) (let ((f (let ((f (sub1 -5)) (l (- (let ((y (add1 1)) (s f) (r (let ((y f)) s)) (o (let ((z f)) f))) (let ((g o) (k g)) r)) (add1 (let ((t f) (r f) (y -7)) f)))) (g (sub1 (- (let ((v f)) v) (* l l))))) (let ((z (- (let ((p -9) (n -9)) g) (sub1 f))) (f (add1 (* 9 z))) (g (* (let ((e 2)) g) (let ((y f) (g l) (j f) (z g)) z))) (n (let ((b (let ((t -9)) f)) (w (let ((f z)) 1))) (sub1 f)))) (sub1 z)))) (v (let ((b (add1 -4)) (j (+ (let ((x 7)) (let ((c f)) b)) (let ((x -2)) (let ((q 5) (w b) (y q) (r 10)) -3)))) (d (let ((b (* (let ((d -10) (k -7) (t d)) j) (let ((s b) (u f)) 1))) (i (- (let ((o b) (v f) (z o) (q z)) 9) (* b 0))) (m (sub1 (let ((m b) (v 1) (u -3) (p 1)) f))) (e (* (sub1 b) b))) (- (let ((f e)) m) (let ((t b) (z e) (a 4)) j))))) (- (add1 (* b 9)) (let ((m (* -6 b))) (* b d))))) (x 6)) -4))) (+ (* 5 (sub1 (let ((a (+ (let ((a (+ 5 0)) (p (sub1 1)) (k (add1 p)) (o (let ((d k) (o p)) k))) (let ((l o) (g 1) (h -9) (j g)) 7)) (- (let ((s 8)) -7) (let ((q 2) (i q)) 1)))) (b -10)) (sub1 b)))) (add1 (sub1 (sub1 (- (- (let ((u -7) (p -3) (t u)) u) (let ((h 1) (m h) (a h)) h)) (add1 (add1 -6))))))))
