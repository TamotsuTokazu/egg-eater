(+ (add1 (let ((r (let ((z -2) (f (add1 (let ((u (let ((v (let ((l z) (m z) (a 2) (v z)) v))) (let ((m v) (j 4) (s 4) (r s)) r)))) (let ((m (let ((g z) (y u) (c 10) (j -2)) -5)) (c (sub1 6)) (d (* m m)) (r (* c 10))) (- r c))))) (e (add1 (add1 (add1 (+ z f))))) (d e)) (+ (sub1 (add1 (- f z))) (let ((p (let ((l (let ((j 3) (l d) (n 3) (a 8)) d))) (+ e l)))) (add1 (* p f)))))) (z (add1 (* (let ((h (add1 (let ((t r)) r))) (z (let ((q (let ((r 5)) r))) (let ((k r)) q))) (e (let ((v (let ((v z) (q h) (o q) (c v)) r)) (m (let ((v r) (k v)) v))) (- h -1)))) (- 4 (add1 -7))) (let ((l (sub1 (+ r r)))) (let ((p (let ((w l) (q w) (i -8)) i))) (+ -2 3)))))) (s (let ((c (* (add1 (- -4 z)) (sub1 (- (let ((i -9) (z i)) -5) (* r r)))))) (let ((s (let ((j (let ((s (let ((y 0) (u r)) 5)) (x (* s -1)) (a (let ((t 9) (v -3) (l -4) (h s)) l)) (t (let ((k -6)) z))) (* s 4))) (k (let ((c (- c r)) (h (sub1 r))) (sub1 z))) (d 6) (r (let ((a 10) (o (let ((t 7) (w r)) r))) (let ((i d) (t -8) (f 5)) o)))) (let ((w (+ d c)) (s (+ j k)) (u (let ((m r) (s c) (l w)) 5)) (r (sub1 r))) (let ((v j) (a -6)) -10)))) (e (let ((r (let ((t (- 1 s))) (add1 -6))) (m (let ((w (add1 -5)) (z (let ((p 3) (q w) (j w)) 10)) (e (- w w)) (h (let ((n -5) (s 10)) -9))) (* r -10))) (i (sub1 (let ((k s)) r))) (z (* (+ -3 6) (sub1 m)))) (sub1 (- i r))))) (sub1 (- (sub1 s) (let ((n c) (m z) (r -2) (p 8)) r))))))) (+ (let ((o (sub1 (- (- z -6) (let ((e 1) (s -10) (y e) (p s)) z)))) (l 3) (y (let ((u s)) (+ (sub1 s) (sub1 s))))) (- (add1 (+ s y)) (- (sub1 l) (add1 s)))) (let ((v (let ((i (+ (let ((k -4)) r) (let ((w -9) (c -5) (x z)) x))) (w (add1 (* -3 z))) (j (add1 (* r -7)))) (sub1 -8))) (i (let ((o (- (let ((u v)) v) (let ((k 1)) r))) (v (* (* v s) (let ((y v)) -4))) (b (let ((u (let ((l -8) (y 3)) 5)) (o (add1 v))) (- z v))) (l (+ (sub1 -9) (add1 v)))) (add1 s))) (b (let ((r (- (- z s) (sub1 -7))) (h (let ((a (+ -9 6))) (+ r a)))) (sub1 (sub1 r))))) (- (let ((z (add1 z)) (v (- v -9)) (c -8)) (+ z c)) (* (- 0 z) (+ -8 i))))))) (add1 (+ (let ((j (let ((d (let ((e (add1 (let ((f 9) (r f) (u f)) -1))) (k e) (g (add1 (- e k))) (q (let ((q (- g 7)) (k -4) (a (add1 q)) (g (- g 1))) (let ((l -2) (n g)) g)))) (* (let ((w e) (f g)) f) (let ((c -10) (a -7) (i 7) (b 3)) q)))) (z (let ((p (add1 (+ 10 d))) (s (+ (add1 p) (* d p))) (o (let ((a (let ((c p) (y s)) p)) (c (let ((q s) (g -8)) g)) (k (add1 1)) (h (sub1 k))) (sub1 s)))) 3)) (h (let ((u (+ (sub1 d) (- z 8))) (e (- (sub1 z) (add1 d)))) (+ (+ 2 -1) (let ((h u) (z d)) e)))) (o (let ((y (add1 (+ d 3))) (q (- h 7))) (+ -6 (+ d -2))))) d)) (c (- (let ((z (+ (- 2 j) (let ((h -4) (b -6) (q -1) (n q)) j)))) (- (let ((y z)) j) (* -2 z))) (+ (sub1 (add1 j)) (let ((m (* j 6)) (f (sub1 j)) (r (+ j m)) (q 5)) (add1 m))))) (q (+ (let ((s (sub1 c)) (t j) (k (- (add1 s) (let ((w 7) (q w) (r -6) (p -10)) -4)))) (- (add1 8) (add1 t))) (let ((e (- c c)) (n (sub1 (+ j 3))) (p (* (let ((z 10) (j e)) c) (add1 0))) (r (- (+ 1 9) (sub1 -5)))) (- (let ((j c)) e) (* 2 e)))))) (sub1 (* (* (+ -1 c) c) (sub1 (let ((u j) (n j) (h j)) u))))) (let ((b 9) (r (sub1 (- (- b (add1 b)) (+ (let ((p b) (o b) (h p)) 6) (let ((b b) (d b)) b))))) (s (sub1 b))) (+ (let ((t (let ((d (let ((w r) (h 9) (z r)) s)) (p (add1 -9))) 2))) t) r)))))
