(let ((i (sub1 (- (- (- (+ (sub1 (let ((r -1)) r)) (sub1 (+ -9 8))) (+ 3 (sub1 (add1 1)))) (let ((o (let ((e (* -2 (add1 9))) (z e)) (let ((i (add1 z))) (add1 z)))) (z (add1 (sub1 3))) (b (- (* (let ((i 10) (b o) (w o) (u o)) i) (let ((k o) (e -3) (b o)) k)) (let ((l (let ((p -10) (q p) (o 7) (b 4)) 10)) (q (let ((w -7)) o))) (- q -5)))) (j (let ((k (+ (let ((x z) (w x) (e z) (z 1)) e) (+ -10 z))) (h (- (let ((k -4) (a b) (o o) (g k)) -2) (+ o z)))) (* (add1 b) (add1 o))))) (add1 (* (let ((z 7) (y o) (b o) (p -4)) p) b)))) (let ((u (let ((f 10) (q (let ((n (sub1 (let ((w f) (b 6) (y b)) y))) (p (let ((i 0)) -2))) (- (add1 5) (- n p)))) (x -4)) (let ((u x) (g (+ (- u q) 1))) (sub1 (let ((y u)) u))))) (g (let ((r (let ((g -2)) g)) (w (let ((x (* (let ((f -2) (o f) (g 0)) 8) u)) (j (sub1 (let ((y u) (a x) (d u) (h u)) d))) (k (let ((c (* 10 u)) (o c) (g (let ((a 1) (p u)) o))) c)) (h (- (add1 u) (let ((a j)) u)))) (sub1 (* r j)))) (z (+ (add1 (let ((v w)) r)) w)) (n (- (sub1 z) (let ((h (let ((l 4) (z w) (v z)) z)) (y (* u z)) (u (let ((s h) (u u) (r 6) (y -9)) 2))) (* y -9))))) (* 6 w)))) (+ g (* g (- (let ((q -1) (k u)) k) (- u -1))))))))) i)
